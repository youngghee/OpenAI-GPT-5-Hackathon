"""Utilities for emitting SQL migration files."""

from __future__ import annotations

from collections.abc import Sequence
from dataclasses import dataclass
from datetime import datetime
from pathlib import Path

from src.agents.schema_agent import MigrationWriter


@dataclass(slots=True)
class FileMigrationWriter(MigrationWriter):
    """Writes SQL migration statements to timestamped files."""

    base_dir: Path

    def write_migration(self, *, name: str, statements: Sequence[str]) -> str:  # type: ignore[override]
        self.base_dir.mkdir(parents=True, exist_ok=True)
        timestamp = datetime.utcnow().strftime("%Y%m%d%H%M%S")
        safe_name = name.replace(" ", "_").replace("/", "-")
        filename = f"{timestamp}_{safe_name}.sql"
        target = self.base_dir / filename
        with target.open("w", encoding="utf-8") as handle:
            handle.write("-- Auto-generated by SchemaAgent\n")
            for statement in statements:
                handle.write(statement.rstrip(";"))
                handle.write(";\n")
        return str(target)
